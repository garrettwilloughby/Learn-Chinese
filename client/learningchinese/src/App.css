
/* all */

body{
  padding: 0;     /*removing all default padding */
  margin:  0;
  box-sizing: border-box;
  background-color: rgb(255, 255, 255);
}

.title{
  font-size: 30px;
  color: black;
  margin-left: 1%;
}

.nav{
  display: flex;
  justify-content: space-between;
  background-color: whitesmoke;
  border-radius: 20;
  
}

.navbuttons{
  margin-right: 1%;
  margin-top: 2.5%;
}

.navbutton{
  border: solid 1px black; /* remove later */
  border-radius: 25px;
}


/* card.js */

.container{
  height: 70vh; /* vh is viewport */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border: solid 1px rgb(204, 204, 204); /* remove later */
}

.card{
  display: flex;
  justify-content: center;
  text-align: center;
  position: relative;
  border-radius: .25rem;
  transform-style: preserve-3d;  /* Things in front now in back, viseversa */
  transition: 150ms; /* Animation for card */
  box-shadow: 0 0 5px 2px rgba(0 , 0 , 0, 0.3);
  background-color: white;
  height: 180px;
  width: 250px;
  cursor: pointer;
  transform: perspective(1000px) rotateY(var(--rotate-y, 0)) translateY(var(--pop, 0));
  font-size: 25px;
  line-height: 125px;
}

.card:hover{
  --pop: -10px;
  box-shadow: 0 0 5px 2px rgba(0 , 0 , 0, 0.5);
}

.card.flip{
  --rotate-y: 180deg;
}


/* review this syntax later. is front, back nested?*/
.card .front,
.card .back{ 
  position: absolute;
  padding: 1rem;
  backface-visibility: hidden;

}

.card .back{ 
  transform: rotateY(180deg);
  
}

.flashcardButtons{
  margin-top: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.speakButton{
  margin-top: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;

}

.button{
  border: solid 1px black; /* remove later */
  margin-left: 5%;
  cursor: pointer;
}

/*flashcard buttons*/

.buttonEasy,
.buttonOkay,
.buttonHard,
.buttonAgain{
  border: solid 1px grey; /* remove later */
  margin-left: 5%;
  cursor: pointer;
  transform: perspective(1000px) translateY(var(--pop, 0));
  text-align: center;
  height: 30px;
  width: 75px;
  border-radius: 10px;
  line-height: 25px;
}


.buttonEasy:hover{
  background-color: rgb(88, 199, 255);
  --pop: 3px;
}

.buttonOkay:hover{
  background-color: rgb(150, 255, 147);
  --pop: 3px;
}

.buttonHard:hover{
  background-color: rgb(255, 253, 129);
  --pop: 3px;
}

.buttonAgain:hover{
  background-color: rgb(255, 129, 129);
  --pop: 3px;
}



/* Editing page */

.input{
  
  display: grid;
  width: 100%;
  justify-content: center;
  border: solid 1px rgb(204, 204, 204); /* remove later */
  
  
}


/* flashcard list */
.listcard{
  justify-content: center;
  text-align: center;
  position: relative;
  border-radius: .25rem;
  box-shadow: 0 0 5px 2px rgba(0 , 0 , 0, 0.3);
  background-color: white;
  height: 270px;
  width: 375px;
  cursor: pointer;
}

.listcard:hover,
.new:hover{
  box-shadow: 0 0 5px 2px rgba(0, 0, 0, 0.5);
}


.flashcardlist{

  width: 100%;
  display: inline-flex;
  margin-bottom: 5%;
 
}

.new{
  display: flex;
  border-radius: .25rem;
  box-shadow: 0 0 5px 2px rgba(0 , 0 , 0, 0.3);
  background-color: white;
  height: 270px;
  width: 375px;
  cursor: pointer;
}

.editButtons{
  display: flex;
}

.translate{
  position: relative;
}

.add{
  height: 10%;

}


input {
  width: 150px; /* Set the desired width */
  height: 30px; /* Set the desired height */
  border-bottom: solid 1px rgb(204, 204, 204); /* remove later */
  border-top: none;
  border-left: none;
  border-right: none;
  
}